sli

A small, typed command-line interface toolkit for Deno.

NAME
  sli - build ergonomic CLIs with a tiny, strongly-typed parser.

SYNOPSIS
  import { command, flag, option, argument, parse } from "jsr:@nmnm/sli"

  const app = command({
    description: "Greeter",
    flags: { verbose: { description: "Verbose", fallback: false } },
    options: { times: option({ description: "Repeats", fallback: 1 }) },
    arguments: [argument({ name: "name", description: "Name", transformer: s => s })],
  })

  const [path, data] = await parse(Deno.args, app)
  console.log(path, data)

INSTALLATION
  Use JSR (recommended):
    import { ... } from "jsr:@nmnm/sli@^0.1.0"

  Or use this repository locally:
    import { ... } from "./mod.ts"

DESCRIPTION
  - Define commands, flags, options, and positional arguments with clear types.
  - Nested subcommands and short aliases (-v, -abc, -o value) are supported.
  - Required options, defaults, multiple-value options, and value transformers.
  - "--" delimiter to pass raw text through unchanged.

EXAMPLES
  See the examples/ directory. Run with Deno, e.g.:
    deno run examples/flags.ts -v
    deno run examples/options.ts --mode fast --count 2
    deno run examples/arguments.ts src.txt dst.txt
    deno run examples/subcommands.ts run --debug
    deno run examples/aliases.ts -av -o out.txt
    deno run examples/raw.ts echo -- hello world --not-a-flag
    deno run examples/complex_subcommands.ts project deploy prod -f --region eu-west-1 -t v1
    deno run examples/help.ts

LICENSE
  LGPL-2.1. See LICENSE.
